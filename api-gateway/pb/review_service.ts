// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v5.29.2
// source: review_service.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Timestamp } from "./google/protobuf/timestamp";
import { ProductDetails } from "./product_service";

export const protobufPackage = "review";

export interface Reviews {
  id: string;
  review: string;
  score: number;
  label: string;
  reviewId: string;
  updatedAt?: Timestamp | undefined;
  createdAt: Timestamp | undefined;
}

export interface AddReviewRequest {
  review: string;
  productId: string;
}

export interface AddReviewResponse {
  message: string;
}

export interface GetReviewsRequest {
  productId: string;
}

export interface GetReviewsResponse {
  reviews: Reviews[];
}

export interface LeaderBoard {
  productId: string;
  score: number;
  productDetails: ProductDetails | undefined;
}

export interface GetTop10ProductsRequest {
}

export interface GetTop10ProductsResponse {
  leaderboard: LeaderBoard[];
}

export interface UpdateReviewRequest {
}

export interface UpdateReviewResponse {
}

export interface DeleteReviewRequest {
}

export interface DeleteReviewResponse {
}

export const REVIEW_PACKAGE_NAME = "review";

export interface ReviewClient {
  addReview(request: AddReviewRequest): Observable<AddReviewResponse>;

  getReviews(request: GetReviewsRequest): Observable<GetReviewsResponse>;

  getTop10Products(request: GetTop10ProductsRequest): Observable<GetTop10ProductsResponse>;

  updateReviews(request: UpdateReviewRequest): Observable<UpdateReviewResponse>;
}

export interface ReviewController {
  addReview(request: AddReviewRequest): Promise<AddReviewResponse> | Observable<AddReviewResponse> | AddReviewResponse;

  getReviews(
    request: GetReviewsRequest,
  ): Promise<GetReviewsResponse> | Observable<GetReviewsResponse> | GetReviewsResponse;

  getTop10Products(
    request: GetTop10ProductsRequest,
  ): Promise<GetTop10ProductsResponse> | Observable<GetTop10ProductsResponse> | GetTop10ProductsResponse;

  updateReviews(
    request: UpdateReviewRequest,
  ): Promise<UpdateReviewResponse> | Observable<UpdateReviewResponse> | UpdateReviewResponse;
}

export function ReviewControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["addReview", "getReviews", "getTop10Products", "updateReviews"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("Review", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("Review", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const REVIEW_SERVICE_NAME = "Review";
